
.character {
  position: relative; 
  /* width: 100%; */
  display: flex;
  align-items: center;
  overflow: visible;
  box-sizing: border-box; 
  transition: opacity 1s ease-in;
}

.enemy {
  flex-direction: row-reverse;
}

.character .image {
  position: relative;
  width: auto;
  height: 65vh; 
  margin-bottom: 0rem;
  display: flex;
  justify-content: flex-start;
  align-items: flex-end;
  border-radius: 10px;
  overflow: visible; 
  box-sizing: border-box;
  opacity: 0.9;
}

.character .image{
  animation: fadeIn 0.5s ease-in;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.character-fading {
  opacity: 0;
}

/* .character .fade-out{
  animation: fadeOut 1s ease-in;
  border: 1px solid red;
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
} */

.character img {
  width: 100%; 
  height: 100%;
  object-fit: cover; 
  overflow: visible;
  box-sizing: border-box;
}

.character:hover .image {
  opacity: 1;
}

.character .highlighted {
  opacity: 1;
}

.character .turn {
  opacity: 1;
}

.character:has(.turn) .container {
  transition: 0.3s ease-in;
  width: 12rem;
  height: 100%; 
  overflow: visible;
  opacity: 1;
}

.character:has(.highlighted) .container {
  transition: 0.3s ease-in;
  width: 12rem;
  height: 100%; 
  overflow: visible;
  opacity: 1;
}

.character:has(.turn) .container .statusEffects {
  transition: 1s;
  opacity: 1;
}

.character:has(.highlighted) .container .statusEffects {
  transition: 1s;
  opacity: 1;
}


.character .container {
  position: absolute;
  top: 37%;
  left: 50%;
  transform: translate(-50%, -50%);  
  width: 0%; 
  overflow: hidden;
  opacity: 0;
}

.heroContainer {
  left: 5rem; 
}

.enemyContainer {
  right: 5rem; 
}

.character:hover .container {
  transition: 0.3s ease-in;
  width: 12rem;
  height: 100%; 
  overflow: visible;
  opacity: 1; 
}

.character .container .statusEffects {
  display: flex;
  gap: 0.1rem;
  margin: 0;
  opacity: 0;
  margin-top: -1.8rem;
  justify-content: center;
  flex-wrap: wrap;
} 

.character:hover .container .statusEffects {
  transition: 1s;
  opacity: 1;
}

.character .container .heroStatusEffects {
  display: flex;
  justify-content: center;
}

.container .statusEffects .effect {
  height: 1.8rem;
  width: 1.8rem;
  border: 2px solid var(--primary);
  border-radius: 5px;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; 
  cursor: pointer; 
}

.container .statusEffects .effect:hover {
  transition: 0.3s;
  transform: scale(1.1);
  border-color: var(--text);
}

.statusEffects span {
  display: block;
}

.character:hover .container .statusEffects .effect {
  transition: 0.6s;
  opacity: 1;
}

.character .container .name {
  font-size: 0.8rem;
  /* font-weight: 600; */
}

.enemyName {
  text-align: right;
}

.character .container .info {
  display: flex;
  /* justify-content: flex-end; */
  gap: 1rem;
  margin-bottom: -0.8rem;
}

.heroInfo {
  justify-content: flex-end;
}

.enemyInfo {
  justify-content: flex-start;
}

.character .container .info p {
  margin: 0;
  font-size: 0.8rem;
}

.character .container progress {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 100%;
  height: 0.4rem; 
  color: #ff0062;
  border: 1px solid #ad0505;
}

.character progress[value]::-webkit-progress-bar,
.character progress[value] {
  background-color: #b0aaaa;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25) inset;
  border-radius: 2px;
}

.character progress[value]::-webkit-progress-value {
  background-color: #ad0505;
  transition: all 0.1s ease-out;
}

.character progress[value]::-moz-progress-bar {
  background-color: #ad0505;
  transition: all 0.1s ease-out;
}

.health {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  height: 4rem;
  gap: 1rem;
  margin-top: -1.2rem;
}

.effect-stack {
  position: absolute;
  bottom: 0%;
  right: 0%;
  font-size: 0.8rem;
  /* font-weight: 600; */
}

.character p {
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

@media only screen and (max-height: 430px) {
  .character:hover .container {
    width: 8rem;
  }
  .character:has(.turn) .container {
    width: 8rem;
  }
  .character:has(.highlighted) .container {
    width: 8rem;
  }
}